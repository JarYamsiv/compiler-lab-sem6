(* This is the preamble where you can have arbitrary sml code. For us
it is empty *)



%%

%eop EOF
%verbose
%pure
%name Expr

(* The terminals or tokens of the language *)
%term CONST of int
    | TAB 
    | PLUS
    | MINUS
    | MUL
    | EOF
    | NEWLINE
    | IDENTIFIER of string
    | EQUALSIGN
    | SEMICOLON
    | COLON
    | LCURL   | RCURL
    | LPAREN  | RPAREN
    | LSQUARE | RSQUARE
    | IF      | ELSE
    | EQ | GT | LT | AND | OR
    | FUN

(* The nonterminals of the language *)
%nonterm PROGRAM of Ast.Statement list
         |STATEMENT of Ast.Statement
         |INDENT of int
         | CONDITION of Ast.Condition


%noshift EOF
(*

Operator precedence and associativity. The %left says the operator is
left associative and the precedence increase as you go down this list.

*)
%left EQ LT GT
%left OR
%left AND
%left SEMICOLON
%left PLUS MINUS  (* + and - are of same precedence *)
%left MUL         (* higher than + and -            *)



(* The type that captures position in the input *)
%pos int

%%

PROGRAM :  STATEMENT PROGRAM       (STATEMENT::PROGRAM)
        |  STATEMENT               ([STATEMENT])

STATEMENT :INDENT IDENTIFIER                        
            (Ast.Ident (INDENT,IDENTIFIER))

          |INDENT IDENTIFIER LPAREN RPAREN          
            (Ast.FunCall (INDENT,IDENTIFIER))

          |INDENT IDENTIFIER EQUALSIGN IDENTIFIER   
            (Ast.Assignment (INDENT,IDENTIFIER1,IDENTIFIER2))

          |INDENT IF LPAREN CONDITION RPAREN COLON
            (Ast.Empty INDENT)



CONDITION : CONST                       ( Ast.CConst CONST)
          | IDENTIFIER                  ( Ast.CVar IDENTIFIER)
          | CONDITION EQ CONDITION      ( Ast.eq CONDITION1 CONDITION2)
          | CONDITION LT CONDITION      ( Ast.lt CONDITION1 CONDITION2)
          | CONDITION GT CONDITION      ( Ast.gt CONDITION1 CONDITION2)
          | CONDITION AND CONDITION     ( Ast.nd CONDITION1 CONDITION2)
          | CONDITION OR CONDITION      ( Ast.or CONDITION1 CONDITION2)
          | LPAREN CONDITION RPAREN     ( CONDITION )


INDENT : TAB INDENT                (INDENT+1)
       |                           (0)





